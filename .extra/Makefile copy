# Compiler definitions
CC = gcc
NVCC = nvcc

# Compiler flags
CFLAGS = -O3
OMPFLAGS = -fopenmp
# Pass the -fopenmp flag to the host compiler used by nvcc
CUDA_HOST_FLAGS = -Xcompiler "-fopenmp"
# Link the math and OpenMP libraries
LIBS = -lm -lgomp

# Suffix rule for .cu files
.SUFFIXES: .c .cu

# Target executables
TARGETS = serial openmp cuda hybrid

all: $(TARGETS)

# Use user's file names
serial: src/corr_serial.c
	$(CC) $(CFLAGS) -o $@ $< -lm

# Use user's file names
openmp: src/corr_openmp.c
	$(CC) $(CFLAGS) $(OMPFLAGS) -o $@ $< -lm

# The cuda target now needs OpenMP flags because it uses omp functions
# We add CUDA_HOST_FLAGS and LIBS
# Use user's file names
cuda: src/corr_cuda.cu
	$(NVCC) $(CFLAGS) $(CUDA_HOST_FLAGS) -o $@ $< $(LIBS)

# # The hybrid target also needs these flags
# hybrid: src/corr_hybrid.cu
# 	$(NVCC) $(CFLAGS) $(CUDA_HOST_FLAGS) -o $@ $< $(LIBS)

clean:
	rm -f $(TARGETS)